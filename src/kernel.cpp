//Делаем главную функцию внешенй
extern "C" void kmain(void);

// !!! Сначало посмотрите функцию kmain() ниже !!! \\
//Объявляем класс для управления текстовым экраном (далее - ТЭ)
class text_screen {
	
public:
	//Конструктор, передаём ему указатель на начало буфера ТЭ
	text_screen(char *vidmem) {
		//Меняем код первого символа
		vidmem[0]='D';
		//Меняем цвет первого символа
		vidmem[1]=0x04;
		//Сохраняем указатель на ТЭ
		this->vidmem=vidmem;
	}
	
	//Функция для смены кода символа
	//i - номер символа на экране, начиная с 0
	//symbol - новый символ
	void changeChar(int i, char symbol)
	{
		vidmem[i*2]=symbol;
	}
	
	//Функция для смены цвета символа
	//i - номер символа на экране, начиная с 0
	//color - новый цвет
	void changeColor(int i, int color)
	{
		vidmem[i*2+1]=color;
	}
	
private:
	char *vidmem;
};

//Главная функци - аналог main() в обычных программах на C/C++
//Она является точной входа в наше ядро на C++
void kmain(void)
{
	//Указатель начало буфера экрана
	char *vidmem=(char*)0xb8000;
	//Мы можем писать на экаране меняя симфолы на конкретных позициях
	vidmem[0]='x';
	//Также мы можем менять символа цвет от 0 до 15
	vidmem[1]=0x02;
	//Создаём класс для управления нашим текстовым экраном
	text_screen main_scr(vidmem);
	//Меняем цвет символа
	main_scr.changeColor(0x04);
	//Меняем код симфола (сам символ)
	main_scr.changeChar('G');
	
	//Завершаем работу ядра на C++
	//Возвращаем управление части на Assembly
	return;
}
